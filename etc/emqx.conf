## NOTE:
## Configs in this file might be overridden by:
## 1. Environment variables which start with 'EMQX_' prefix
## 2. File $EMQX_NODE__DATA_DIR/configs/cluster-override.conf
## 3. File $EMQX_NODE__DATA_DIR/configs/local-override.conf
##
## The *-override.conf files are overwritten at runtime when changes
## are made from EMQX dashboard UI, management HTTP API, or CLI.
## All configuration details can be found in emqx.conf.example

node {
  name = "emqx@127.0.0.1"
  cookie = "emqxsecretcookie"
  data_dir = "data"
}

log {
  file_handlers.default {
    level = warning
    file = "log/emqx.log"
  }
}

cluster {
  name = emqxcl
  discovery_strategy = manual
} 

listeners.tcp.default {
  bind = "0.0.0.0:1883"
  max_connections = 1024000
}

listeners.ssl.default {
  bind = "0.0.0.0:8883"
  max_connections = 512000
  ssl_options {
    keyfile = "etc/certs/emqx.key"
    certfile = "etc/certs/emqx.pem"
    cacertfile = "etc/certs/ca.pem"
    verify = verify_peer
    fail_if_no_peer_cert = true
  }
}

mqtt.peer_cert_as_clientid = cn

# listeners.ws.default {
#   bind = "0.0.0.0:8083"
#   max_connections = 1024000
#   websocket.mqtt_path = "/mqtt"
# }

# listeners.wss.default {
#   bind = "0.0.0.0:8084"
#   max_connections = 512000
#   websocket.mqtt_path = "/mqtt"
#   ssl_options {
#     keyfile = "etc/certs/key.pem"
#     certfile = "etc/certs/cert.pem"
#     cacertfile = "etc/certs/cacert.pem"
#   }
# }

dashboard {
    listeners.http {
        bind = 18083
    }
    default_username = "admin"
    default_password = "public"
}

authorization {
  deny_action = ignore
  no_match = allow
  sources =  [
    {
      body {
        action = "${action}"
        clientId = "${clientid}"
        mountPoint = "${mountpoint}"
        peerHost = "${peerhost}"
        topic = "${topic}"
        username = "${username}"
      }
      connect_timeout = 15s
      enable = true
      enable_pipelining = 100
      headers {
        accept = "application/json"
        cache-control = no-cache
        connection = keep-alive
        content-type = "application/json"
        keep-alive = "timeout=30, max=1000"
      }
      method = post
      pool_size = 8
      request_timeout = 30s
      ssl {
        ciphers = []
        depth = 10
        enable = false
        hibernate_after = 5s
        log_level = notice
        reuse_sessions = true
        secure_renegotiate = true
        verify = verify_peer
        versions = [tlsv1.3, tlsv1.2]
      }
      type = http
      url = "http://192.168.1.10:3000/api/v1/auth/mqtt"
    },
    {
      enable = true
      path = "etc/acl.conf"
      type = file
    }
  ]
}
